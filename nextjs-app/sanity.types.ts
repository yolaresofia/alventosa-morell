/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  projectNumber?: string;
  category?: "all" | "uni" | "pluri" | "equip";
  builder?: Array<{
    _key: string;
  } & CoverImage | {
    _key: string;
  } & ProjectSummary | {
    _key: string;
  } & DiptychImage | {
    _key: string;
  } & TextBlock | {
    _key: string;
  } & ImageCarousel | {
    _key: string;
  } & ProjectInfo>;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type ProjectInfo = {
  _type: "projectInfo";
  description?: {
    ca?: string;
    es?: string;
    en?: string;
  };
  project?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: {
      ca?: string;
      es?: string;
      en?: string;
    };
  };
  year?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: string;
  };
  location?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: {
      ca?: string;
      es?: string;
      en?: string;
    };
  };
  program?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: {
      ca?: string;
      es?: string;
      en?: string;
    };
  };
  area?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: string;
  };
  authors?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: {
      ca?: string;
      es?: string;
      en?: string;
    };
  };
  team?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: {
      ca?: string;
      es?: string;
      en?: string;
    };
  };
  photographer?: {
    label?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    value?: string;
  };
};

export type TextBlock = {
  _type: "textBlock";
  text: {
    ca?: string;
    es?: string;
    en?: string;
  };
  alignment?: "left" | "right";
};

export type ImageCarousel = {
  _type: "imageCarousel";
  images: Array<{
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText: {
      ca?: string;
      es?: string;
      en?: string;
    };
    _type: "imageWithAltText";
    _key: string;
  }>;
};

export type DiptychImage = {
  _type: "diptychImage";
  leftImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  leftAltText: {
    ca?: string;
    es?: string;
    en?: string;
  };
  rightImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  rightAltText: {
    ca?: string;
    es?: string;
    en?: string;
  };
  paddingTop?: "0" | "4" | "8" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64";
  paddingBottom?: "0" | "4" | "8" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64";
};

export type ProjectSummary = {
  _type: "projectSummary";
  number?: string;
  title: string;
  description?: string;
};

export type CoverImage = {
  _type: "coverImage";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  altText: {
    ca?: string;
    es?: string;
    en?: string;
  };
  paddingTop?: "0" | "4" | "8" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64";
  paddingBottom?: "0" | "4" | "8" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64";
};

export type About = {
  _id: string;
  _type: "about";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  aboutText?: {
    ca?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    en?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    es?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  };
  contact?: {
    titleTranslations?: {
      ca?: string;
      en?: string;
      es?: string;
    };
    email?: string;
    phone?: string;
  };
  office?: {
    titleTranslations?: {
      ca?: string;
      en?: string;
      es?: string;
    };
    address?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    addressUrl?: Link;
  };
  social?: {
    instagram?: Link;
  };
  team?: {
    titleTranslations?: {
      ca?: string;
      en?: string;
      es?: string;
    };
    coFounders?: Array<{
      name?: string;
      role?: {
        ca?: string;
        en?: string;
        es?: string;
      };
      _type: "coFounder";
      _key: string;
    }>;
    teammates?: Array<{
      name?: string;
      _type: "teammate";
      _key: string;
    }>;
    teammatesTitleTranslations?: {
      ca?: string;
      en?: string;
      es?: string;
    };
    pastTeammates?: Array<{
      name?: string;
      _type: "pastTeammate";
      _key: string;
    }>;
    pastTeammatesTitleTranslations?: {
      ca?: string;
      en?: string;
      es?: string;
    };
  };
  aboutInfo?: {
    ca?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    en?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    es?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "newTab" | "modal";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  };
};

export type IntroHero = {
  _type: "introHero";
  desktopBackgroundImages?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText?: string;
    _key: string;
  }>;
  mobileBackgroundImages?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText?: string;
    _key: string;
  }>;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  logoAltText?: string;
  filter?: boolean;
};

export type Link = {
  _type: "link";
  linkType?: "href";
  urlTitle?: string;
  href?: string;
  openType?: "newTab" | "modal";
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    linkType?: "href";
    urlTitle?: string;
    href?: string;
    openType?: "newTab" | "modal";
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type Home = {
  _id: string;
  _type: "home";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  featuredProjects?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "project";
  }>;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    metadataBase?: string;
    _type: "image";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  navLinks?: Array<{
    label?: string;
    href?: string;
    _key: string;
  }>;
  languages?: Array<string>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask";
  path?: string;
  instructionKey?: string;
  started?: string;
  updated?: string;
  info?: string;
};

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status";
  tasks?: Array<{
    _key: string;
  } & SanityAssistInstructionTask>;
};

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations";
  title?: string;
  fields?: Array<{
    _key: string;
  } & SanityAssistSchemaTypeField>;
};

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type";
  type?: string;
};

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field";
  path?: string;
};

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context";
  reference: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "assist.instruction.context";
  };
};

export type AssistInstructionContext = {
  _id: string;
  _type: "assist.instruction.context";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  context?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: null;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput";
  message: string;
  description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  } | {
    _key: string;
  } & SanityAssistInstructionFieldRef | {
    _key: string;
  } & SanityAssistInstructionContext | {
    _key: string;
  } & SanityAssistInstructionUserInput>;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef";
  path?: string;
};

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction";
  prompt?: SanityAssistInstructionPrompt;
  icon?: string;
  title?: string;
  userId?: string;
  createdById?: string;
  output?: Array<{
    _key: string;
  } & SanityAssistOutputField | {
    _key: string;
  } & SanityAssistOutputType>;
};

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field";
  path?: string;
  instructions?: Array<{
    _key: string;
  } & SanityAssistInstruction>;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Project | Slug | ProjectInfo | TextBlock | ImageCarousel | DiptychImage | ProjectSummary | CoverImage | About | IntroHero | Link | BlockContent | Home | Settings | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Color | RgbaColor | HsvaColor | HslaColor | SanityAssistInstructionTask | SanityAssistTaskStatus | SanityAssistSchemaTypeAnnotations | SanityAssistOutputType | SanityAssistOutputField | SanityAssistInstructionContext | AssistInstructionContext | SanityAssistInstructionUserInput | SanityAssistInstructionPrompt | SanityAssistInstructionFieldRef | SanityAssistInstruction | SanityAssistSchemaTypeField;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: getAboutPageQuery
// Query: *[_type == "about"][0]{    aboutText,    contact {      titleTranslations,      email,      phone    },    office {      titleTranslations,      address,      addressUrl    },    social {      instagram    },    team {      titleTranslations,      coFounders[]{        name,        role      },      teammates[]{        name      },      teammatesTitleTranslations,      pastTeammates[]{        name      },      pastTeammatesTitleTranslations    },    aboutInfo  }
export type GetAboutPageQueryResult = {
  aboutText: {
    ca?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    en?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    es?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  } | null;
  contact: {
    titleTranslations: {
      ca?: string;
      en?: string;
      es?: string;
    } | null;
    email: string | null;
    phone: string | null;
  } | null;
  office: {
    titleTranslations: {
      ca?: string;
      en?: string;
      es?: string;
    } | null;
    address: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    addressUrl: Link | null;
  } | null;
  social: {
    instagram: Link | null;
  } | null;
  team: {
    titleTranslations: {
      ca?: string;
      en?: string;
      es?: string;
    } | null;
    coFounders: Array<{
      name: string | null;
      role: {
        ca?: string;
        en?: string;
        es?: string;
      } | null;
    }> | null;
    teammates: Array<{
      name: string | null;
    }> | null;
    teammatesTitleTranslations: {
      ca?: string;
      en?: string;
      es?: string;
    } | null;
    pastTeammates: Array<{
      name: string | null;
    }> | null;
    pastTeammatesTitleTranslations: {
      ca?: string;
      en?: string;
      es?: string;
    } | null;
  } | null;
  aboutInfo: {
    ca?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    en?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    es?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        linkType?: "href";
        urlTitle?: string;
        href?: string;
        openType?: "modal" | "newTab";
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  } | null;
} | null;
// Variable: getProjectsGridQuery
// Query: *[_type == "project"] | order(projectNumber asc) {    title,    slug,    projectNumber,    category, // ← ADD THIS    thumbnail,    "projectInfo": builder[_type == "projectInfo"][0]{      year,      location,      program,      area    }  }
export type GetProjectsGridQueryResult = Array<{
  title: string;
  slug: Slug;
  projectNumber: string | null;
  category: "all" | "equip" | "pluri" | "uni" | null;
  thumbnail: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  projectInfo: {
    year: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: string;
    } | null;
    location: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    } | null;
    program: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    } | null;
    area: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: string;
    } | null;
  } | null;
}>;
// Variable: getSingleProjectQuery
// Query: *[_type == "project" && slug.current == $slug][0]{    title,    slug,    projectNumber,    builder[]{      // Your dynamic sections like images, text, etc      ...    }  }
export type GetSingleProjectQueryResult = {
  title: string;
  slug: Slug;
  projectNumber: string | null;
  builder: Array<{
    _key: string;
    _type: "coverImage";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText: {
      ca?: string;
      es?: string;
      en?: string;
    };
    paddingTop?: "0" | "12" | "16" | "20" | "24" | "32" | "4" | "40" | "48" | "56" | "64" | "8";
    paddingBottom?: "0" | "12" | "16" | "20" | "24" | "32" | "4" | "40" | "48" | "56" | "64" | "8";
  } | {
    _key: string;
    _type: "diptychImage";
    leftImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    leftAltText: {
      ca?: string;
      es?: string;
      en?: string;
    };
    rightImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    rightAltText: {
      ca?: string;
      es?: string;
      en?: string;
    };
    paddingTop?: "0" | "12" | "16" | "20" | "24" | "32" | "4" | "40" | "48" | "56" | "64" | "8";
    paddingBottom?: "0" | "12" | "16" | "20" | "24" | "32" | "4" | "40" | "48" | "56" | "64" | "8";
  } | {
    _key: string;
    _type: "imageCarousel";
    images: Array<{
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      altText: {
        ca?: string;
        es?: string;
        en?: string;
      };
      _type: "imageWithAltText";
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "projectInfo";
    description?: {
      ca?: string;
      es?: string;
      en?: string;
    };
    project?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    };
    year?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: string;
    };
    location?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    };
    program?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    };
    area?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: string;
    };
    authors?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    };
    team?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: {
        ca?: string;
        es?: string;
        en?: string;
      };
    };
    photographer?: {
      label?: {
        ca?: string;
        es?: string;
        en?: string;
      };
      value?: string;
    };
  } | {
    _key: string;
    _type: "projectSummary";
    number?: string;
    title: string;
    description?: string;
  } | {
    _key: string;
    _type: "textBlock";
    text: {
      ca?: string;
      es?: string;
      en?: string;
    };
    alignment?: "left" | "right";
  }> | null;
} | null;
// Variable: settingsQuery
// Query: *[_type == "settings"][0]{    siteTitle,    description,    ogImage,    logo,    navLinks,    languages  }
export type SettingsQueryResult = {
  siteTitle: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  ogImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    metadataBase?: string;
    _type: "image";
  } | null;
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  navLinks: Array<{
    label?: string;
    href?: string;
    _key: string;
  }> | null;
  languages: Array<string> | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type == \"about\"][0]{\n    aboutText,\n    contact {\n      titleTranslations,\n      email,\n      phone\n    },\n    office {\n      titleTranslations,\n      address,\n      addressUrl\n    },\n    social {\n      instagram\n    },\n    team {\n      titleTranslations,\n      coFounders[]{\n        name,\n        role\n      },\n      teammates[]{\n        name\n      },\n      teammatesTitleTranslations,\n      pastTeammates[]{\n        name\n      },\n      pastTeammatesTitleTranslations\n    },\n    aboutInfo\n  }\n": GetAboutPageQueryResult;
    "\n  *[_type == \"project\"] | order(projectNumber asc) {\n    title,\n    slug,\n    projectNumber,\n    category, // \u2190 ADD THIS\n    thumbnail,\n    \"projectInfo\": builder[_type == \"projectInfo\"][0]{\n      year,\n      location,\n      program,\n      area\n    }\n  }\n": GetProjectsGridQueryResult;
    "\n  *[_type == \"project\" && slug.current == $slug][0]{\n    title,\n    slug,\n    projectNumber,\n    builder[]{\n      // Your dynamic sections like images, text, etc\n      ...\n    }\n  }\n": GetSingleProjectQueryResult;
    "\n  *[_type == \"settings\"][0]{\n    siteTitle,\n    description,\n    ogImage,\n    logo,\n    navLinks,\n    languages\n  }\n": SettingsQueryResult;
  }
}
